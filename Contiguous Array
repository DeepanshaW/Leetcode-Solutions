/*
Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
*/

class Solution {
    public int findMaxLength(int[] nums) {
        int max=0,c=0;
        Map<Integer,Integer> map=new HashMap<>();
        map.put(0,-1);
        for(int i=0;i<nums.length;i++){
            c+=(nums[i]==0)? -1:1;
            if(map.containsKey(c)){
                max=Math.max(max,i-map.get(c));
            }
                else
                    map.put(c,i);
            }
        return max;
        
    }
}
